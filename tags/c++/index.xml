<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C++ on imlk's blog</title><link>https://blog.imlk.top/tags/c++/</link><description>Recent content in C++ on imlk's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 19 Jan 2018 21:41:51 +0800</lastBuildDate><atom:link href="https://blog.imlk.top/tags/c++/index.xml" rel="self" type="application/rss+xml"/><item><title>在C++构造函数中转而调用其它构造函数的三种方法</title><link>https://blog.imlk.top/posts/c++-three-ways-to-to-call-other-constructors-in-constructor/</link><pubDate>Fri, 19 Jan 2018 21:41:51 +0800</pubDate><guid>https://blog.imlk.top/posts/c++-three-ways-to-to-call-other-constructors-in-constructor/</guid><description>C++构造函数中转而调用其它构造函数的三种方法 0x00 在初始化列表中调调用另一个构造函数 /** * warning: delegating constructors only available with -std=c++11 or -std=gnu++11 */ Teacher::Teacher(): Teacher(&amp;quot;unknown&amp;quot;,30) {} 0x01 使用this指针显式调用构</description></item><item><title>Java和C++中方法Override后外部调用父类方法时的区别</title><link>https://blog.imlk.top/posts/methods-overriding-in-java-and-c++/</link><pubDate>Tue, 21 Nov 2017 17:30:03 +0800</pubDate><guid>https://blog.imlk.top/posts/methods-overriding-in-java-and-c++/</guid><description>以Java语法示范： 面向对象中，B extends A // Java中 B objectB = new B(); objectB.foo();//输出 from Child Class A objectA = new B(); objectA.foo();</description></item></channel></rss>