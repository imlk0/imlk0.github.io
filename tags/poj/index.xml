<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>POJ on imlk's blog</title><link>https://blog.imlk.top/tags/poj/</link><description>Recent content in POJ on imlk's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 13 Jul 2018 16:08:54 +0800</lastBuildDate><atom:link href="https://blog.imlk.top/tags/poj/index.xml" rel="self" type="application/rss+xml"/><item><title>POJ 1061 青蛙的约会</title><link>https://blog.imlk.top/posts/poj-1061-frogs-date/</link><pubDate>Fri, 13 Jul 2018 16:08:54 +0800</pubDate><guid>https://blog.imlk.top/posts/poj-1061-frogs-date/</guid><description>原题 http://poj.org/problem?id=1061 解法 此题用扩展欧几里得计算 (n-m) * X ≡ (x-y) (mod l) 的最小正整数解 即(n-m) * X + l * Y = (x-y) 贝祖定理： ax + by = m 有整数解时当且仅当m是gcd(a</description></item><item><title>POJ 1150 The Last Non-zero Digit</title><link>https://blog.imlk.top/posts/poj-1150-the-last-nonzero-digit/</link><pubDate>Fri, 13 Jul 2018 16:02:29 +0800</pubDate><guid>https://blog.imlk.top/posts/poj-1150-the-last-nonzero-digit/</guid><description>原题 http://poj.org/problem?id=1150 参考 https://blog.csdn.net/txl199106/article/details/40653579 #include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;cstring&amp;gt;#include &amp;lt;string&amp;gt;#include &amp;lt;cstdio&amp;gt;#include &amp;lt;cmath&amp;gt; #define LL long long using namespace std; // 除了统计2，5的总因子数，还统计末尾位为3，7，9的数目 void count(LL co[], int n) { if (n == 0) { return; } for (int m = n; m &amp;gt; 0;</description></item><item><title>HDU 1080 POJ 1080 Human Gene Functions——动态规划</title><link>https://blog.imlk.top/posts/hdu-1080-poj-1080-human-gene-functions-dp/</link><pubDate>Mon, 26 Feb 2018 21:53:24 +0800</pubDate><guid>https://blog.imlk.top/posts/hdu-1080-poj-1080-human-gene-functions-dp/</guid><description>http://poj.org/problem?id=1080 http://acm.hdu.edu.cn/showproblem.php?pid=1080 #include &amp;lt;iostream&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;cstring&amp;gt; #define MAX(x,y,z) ((x)&amp;gt;(y)?((x)&amp;gt;(z)?(x):(z)):((y)&amp;gt;(z)?(y):(z))) using namespace std; char str1[105]; char str2[105]; int list[6][6] = { // { \0, A, C, G, T, -} /*\0*/ { 0, 0, 0, 0, 0, 0}, /*A*/ { 0, 5, -1, -2, -1, -3}, /*C*/ { 0, -1, 5, -3, -2, -4}, /*G*/ { 0, -2, -3, 5, -2, -2}, /*T*/ { 0, -1, -2, -2,</description></item></channel></rss>